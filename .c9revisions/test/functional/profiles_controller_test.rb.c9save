{"ts":1372722725922,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass ProfilesControllerTest < ActionController::TestCase\n  test \"should get show\" do\n    get :show\n    assert_response :success\n  end\n\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":163}]],"length":163}
{"contributors":[],"silentsave":false,"ts":1372722899342,"patch":[[{"diffs":[[0,"et :show"],[1,", id: user(:Ashwin).profile_name"],[0,"\n    ass"]],"start1":114,"start2":114,"length1":16,"length2":48}]],"length":195,"saved":false}
{"ts":1372722971892,"patch":[[{"diffs":[[0,"id: user"],[1,"s"],[0,"(:Ashwin"]],"start1":124,"start2":124,"length1":16,"length2":17},{"diffs":[[0,"success\n"],[1,"    assert_template 'profiles/show'\n"],[0,"  end\n\ne"]],"start1":177,"start2":177,"length1":16,"length2":52}]],"length":232,"saved":false}
{"ts":1372723030155,"patch":[[{"diffs":[[0,"w'\n  end"],[1,"\n  \n  test \"should render a 404 on profile not found\" do\n    get :show, id: users(:Ashwin).profile_name\n    assert_response :success\n    assert_template 'profiles/show'\n  end"],[0,"\n\nend\n"]],"start1":218,"start2":218,"length1":14,"length2":188}]],"length":406,"saved":false}
{"ts":1372723058052,"patch":[[{"diffs":[[0,"id: "],[-1,"users(:Ashwin).profile_name"],[1,"\"doesn't exist\""],[0,"\n   "]],"start1":298,"start2":298,"length1":35,"length2":23}]],"length":394,"saved":false}
{"ts":1372723074310,"patch":[[{"diffs":[[0,"ssert_response :"],[-1,"success"],[1,"not_found"],[0,"\n    assert_temp"]],"start1":323,"start2":323,"length1":39,"length2":41}]],"length":396,"saved":false}
{"ts":1372723776933,"patch":[[{"diffs":[[0,"w'\n  end"],[1,"\n  \n  test \"that variables are assigned on successful profile viewing\" do\n    get :show, id: \"doesn't exist\"\n    assert_response :not_found\n    assert_template 'profiles/show'\n  end"],[0,"\n\nend\n"]],"start1":382,"start2":382,"length1":14,"length2":195}]],"length":577,"saved":false}
{"ts":1372723826019,"patch":[[{"diffs":[[0,"id: "],[-1,"\"doesn't exist\"\n    assert_response :not_found\n    assert_template 'profiles/show'"],[1,"users(:Ashwin).profile_name\n    assert assigns(:user)"],[0,"\n  e"]],"start1":479,"start2":479,"length1":90,"length2":61}]],"length":548,"saved":false}
{"ts":1372727110438,"patch":[[{"diffs":[[0,"(:user)\n"],[1,"    assert_not_empty assigns(:statuses)\n  end\n  \n  test \"only shows the correct user's statuses\" do\n    get :show, id: users(:Ashwin).profile_name\n    assigns(:statuses).each do |status|\n      assert_equal users(:Ashwin), status.user\n  "],[0,"  end\n\ne"]],"start1":529,"start2":529,"length1":16,"length2":252}]],"length":784,"saved":false}
{"ts":1372727217843,"patch":[[{"diffs":[[0,"    end\n"],[1," end"],[0,"\nend\n"]],"start1":771,"start2":771,"length1":13,"length2":17}]],"length":788,"saved":false}
