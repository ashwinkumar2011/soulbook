{"ts":1372707906636,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass StatusTest < ActiveSupport::TestCase\n  # test \"the truth\" do\n  #   assert true\n  # end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":120}]],"length":120}
{"contributors":[],"silentsave":false,"ts":1372710036297,"patch":[[{"diffs":[[0,"stCase\n "],[-1," #"],[0," test \"t"]],"start1":59,"start2":59,"length1":18,"length2":16},{"diffs":[[0," \"th"],[-1,"e truth"],[1,"at a status requires content"],[0,"\" do\n  "],[-1,"#"],[0,"   "],[-1,"assert true\n  #"],[1," status = Staus.new\n "],[0," end"]],"start1":72,"start2":72,"length1":41,"length2":67}]],"length":144,"saved":false}
{"ts":1372710067105,"patch":[[{"diffs":[[0,"aus.new\n"],[1,"      assert ! status.valid?\n"],[0,"  end\nen"]],"start1":126,"start2":126,"length1":16,"length2":45}]],"length":173,"saved":false}
{"ts":1372710207828,"patch":[[{"diffs":[[0,"assert !"],[-1," "],[0,"status.v"]],"start1":140,"start2":140,"length1":17,"length2":16}]],"length":172,"saved":false}
{"ts":1372710294001,"patch":[[{"diffs":[[0,"us = Sta"],[1,"t"],[0,"us.new\n "]],"start1":119,"start2":119,"length1":16,"length2":17}]],"length":173,"saved":false}
{"ts":1372710323860,"patch":[[{"diffs":[[0,"tus."],[-1,"valid?"],[1,"save"],[0,"\n  e"]],"start1":152,"start2":152,"length1":14,"length2":12}]],"length":171,"saved":false}
{"ts":1372710363741,"patch":[[{"diffs":[[0,"us.save\n"],[1,"      assert !status.errors[:content].empty?\n"],[0,"  end\nen"]],"start1":153,"start2":153,"length1":16,"length2":61}]],"length":216,"saved":false}
{"ts":1372710663436,"patch":[[{"diffs":[[0,"?\n  end\n"],[1,"  \n  test \"that a status content is atleast two letters long\" do\n      status = Status.new\n      assert !status.save\n      assert !status.errors[:content].empty?\n  end\n"],[0,"end\n"]],"start1":204,"start2":204,"length1":12,"length2":180}]],"length":384,"saved":false}
{"ts":1372710688760,"patch":[[{"diffs":[[0,"us = Status.new\n"],[1,"      status.content = 'H'\n"],[0,"      assert !st"]],"start1":287,"start2":287,"length1":32,"length2":59}]],"length":411,"saved":false}
{"ts":1372710695765,"patch":[[{"diffs":[[0,"t = "],[-1,"'H'"],[1,"\"H\""],[0,"\n   "]],"start1":322,"start2":322,"length1":11,"length2":11}]],"length":411,"saved":false}
{"ts":1372710854300,"patch":[[{"diffs":[[0,"?\n  end\n"],[1,"  \n  test \"that a status has a user id\" do\n      status = Status.new\n      status.content = \"Hello\"\n      assert !status.save\n      assert !status.errors[:user_id].empty?\n  end\n"],[0,"end\n"]],"start1":399,"start2":399,"length1":12,"length2":189}]],"length":588,"saved":false}
